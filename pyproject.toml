[project]
name = "starting-codebase"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "chromadb==1.0.15",
    "boto3>=1.35.0",
    "sentence-transformers==5.0.0",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "python-multipart==0.0.20",
    "python-dotenv==1.1.1",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "ruff>=0.13.1",
]

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--asyncio-mode=auto",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API endpoint tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude virtual environment
  \.venv
  | venv
  # Exclude build directories
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py313"
exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.lint.isort]
known-first-party = ["backend"]
